<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="S.M. Shetty College Student Voting System for CR/LR elections">
    <meta name="theme-color" content="#0056b3">
    <title>S.M Shetty Junior College - Voting System</title>
    <link rel="icon" href="assets/favicon.ico" type="image/x-icon">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
            color: #333;
        }
        
        header {
            background-color: #0056b3;
            color: white;
            padding: 20px;
            text-align: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        .logo-space {
            width: 150px;
            height: 150px;
            margin: 0 auto 15px;
            border-radius: 50%;
            overflow: hidden;
            border: 3px solid #0056b3;
        }
        
        .logo-space img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
        }
        
        .tabs {
            display: flex;
            margin-bottom: 20px;
            background-color: #0056b3;
            border-radius: 5px;
            overflow: hidden;
        }
        
        .tab {
            padding: 10px 20px;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .tab.active {
            background-color: #003d7a;
        }
        
        .card {
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            padding: 20px;
            margin-bottom: 20px;
        }
        
        h2 {
            color: #0056b3;
            margin-top: 0;
        }
        
        .candidate-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .candidate {
            background-color: #f9f9f9;
            border-radius: 5px;
            padding: 15px;
            text-align: center;
            transition: transform 0.2s;
            border: 1px solid #ddd;
        }
        
        .candidate:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .candidate img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 10px;
            border: 3px solid #0056b3;
        }
        
        button {
            background-color: #0056b3;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        button:hover {
            background-color: #003d7a;
        }
        
        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        
        .vote-btn {
            margin-top: 10px;
            width: 100%;
        }
        
        .login-form {
            max-width: 400px;
            margin: 0 auto;
        }
        
        input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-sizing: border-box;
        }
        
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        
        .modal-content {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            max-width: 500px;
            width: 90%;
            text-align: center;
        }
        
        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            cursor: pointer;
            color: #333;
        }
        
        .results-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        .results-table th, .results-table td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }
        
        .results-table th {
            background-color: #0056b3;
            color: white;
        }
        
        .results-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        
        .winner {
            font-weight: bold;
            color: #0056b3;
        }
        
        .admin-controls {
            margin-top: 20px;
        }
        
        .voted-message {
            color: #0056b3;
            font-weight: bold;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <header>
        <div class="logo-space">
            <img src="https://smshettycollege.edu.in/" alt="S.M Shetty Junior College Logo" width="150" height="150">
        </div>
        <h1>S.M Shetty Junior College</h1>
        <p>Online Voting System</p>
    </header>
    
    <div class="container">
        <div class="tabs">
            <div class="tab active" onclick="showTab('vote')">Vote</div>
            <div class="tab" onclick="showTab('loginRegister')">Login/Register</div>
            <div class="tab" id="resultsTab" style="display: none;" onclick="showTab('results')">Results</div>
            <div class="tab" id="adminTab" style="display: none;" onclick="showTab('admin')">Admin</div>
        </div>
        
        <div id="vote" class="tab-content card">
            <div style="text-align: right;">
                <button onclick="logout()">Logout</button>
            </div>
            <h2>Cast Your Vote</h2>
            <div id="login-prompt" style="text-align: center; display: none;">
                <p>Please login to vote</p>
                <button onclick="showTab('loginRegister')">Login/Register</button>
            </div>
            
            <div id="cr-section" style="display: none;">
                <h3>Class Representative (CR) Candidates</h3>
                <div id="cr-candidates" class="candidate-list"></div>
            </div>
            
            <div id="lr-section" style="margin-top: 30px; display: none;">
                <h3>Library Representative (LR) Candidates</h3>
                <div id="lr-candidates" class="candidate-list"></div>
            </div>
        </div>
        
        <div id="loginRegister" class="tab-content card" style="display: none;">
            <h2>Login or Register</h2>
            <div class="login-form">
                <input type="text" id="username" placeholder="Username">
                <input type="password" id="password" placeholder="Password">
                <button onclick="login()">Login</button>
                <p id="loginMessage"></p>
                
                <h3>Register</h3>
                <input type="text" id="regUsername" placeholder="Username">
                <input type="password" id="regPassword" placeholder="Password">
                <input type="text" id="regRole" placeholder="Role (student/teacher)">
                <button onclick="register()">Register</button>
                <p id="registerMessage"></p>
            </div>
        </div>
        
        <div id="results" class="tab-content card" style="display: none;">
            <h2>Voting Results</h2>
            <div id="cr-results">
                <h3>Class Representative (CR) Results</h3>
                <table class="results-table">
                    <thead>
                        <tr>
                            <th>Candidate</th>
                            <th>Votes</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody id="cr-results-body">
                    </tbody>
                </table>
            </div>
            
            <div id="lr-results" style="margin-top: 30px;">
                <h3>Library Representative (LR) Results</h3>
                <table class="results-table">
                    <thead>
                        <tr>
                            <th>Candidate</th>
                            <th>Votes</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody id="lr-results-body">
                    </tbody>
                </table>
            </div>
            
            <div id="winner-section" style="margin-top: 30px;">
                <h2>Winner Declaration</h2>
                <div id="cr-winner"></div>
                <div id="lr-winner" style="margin-top: 20px;"></div>
            </div>
        </div>
        
        <div id="admin" class="tab-content card" style="display: none;">
            <h2>Admin Panel</h2>
            <div id="adminMessage"></div>
            
            <div class="admin-controls" id="addCandidateForm">
                <h3>Add Candidate</h3>
                <input type="text" id="candidateName" placeholder="Candidate Name">
                <input type="text" id="candidateGroup" placeholder="Group (cr/lr)">
                <button onclick="addCandidate()">Add Candidate</button>
            </div>
            
            <div class="admin-controls">
                <h3>Remove Candidate</h3>
                <select id="candidateToRemove"></select>
                <button onclick="removeCandidate()">Remove Candidate</button>
            </div>
        </div>
    </div>
    
    <div id="thankYouModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal()">&times;</span>
            <h2>Thank You for Voting!</h2>
            <p>Your vote has been recorded successfully.</p>
            <button onclick="closeModal()">Close</button>
        </div>
    </div>
    
    <script defer>
        // Database simulation
        let users = [
            { username: 'student1', password: 'pass123', role: 'student', votedCR: false, votedLR: false },
            { username: 'teacher1', password: 'teacher456', role: 'teacher' }
        ];
        
        let candidates = [
            { id: 1, name: 'Rahul Sharma', group: 'cr', votes: 0 },
            { id: 2, name: 'Priya Patel', group: 'cr', votes: 0 },
            { id: 3, name: 'Sameer Joshi', group: 'lr', votes: 0 },
            { id: 4, name: 'Neha Gupta', group: 'lr', votes: 0 }
        ];
        
        let currentUser = null;
        
        // Initialize the page with localStorage check
        function init() {
            renderCandidates();
            updateRemoveCandidateDropdown();
            
            // Set some example votes for demonstration
            candidates[0].votes = 15;
            candidates[1].votes = 20;
            candidates[2].votes = 18;
            candidates[3].votes = 12;
            
            // Check for saved login state
            const savedUser = localStorage.getItem('currentUser');
            if (savedUser) {
                currentUser = JSON.parse(savedUser);
                updateUI();
                document.getElementById('login-prompt').style.display = 'none';
                document.getElementById('cr-section').style.display = 'block';
                document.getElementById('lr-section').style.display = 'block';
                showTab(currentUser.role === 'teacher' ? 'admin' : 'vote');
            } else {
                // Hide voting sections and show login prompt
                document.getElementById('cr-section').style.display = 'none';
                document.getElementById('lr-section').style.display = 'none';
                document.getElementById('login-prompt').style.display = 'block';
                showTab('loginRegister');
            }
        }
        
        // Show the selected tab
        function showTab(tabId) {
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.style.display = 'none';
            });
            
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            document.getElementById(tabId).style.display = 'block';
            document.querySelector(`[onclick="showTab('${tabId}')"]`).classList.add('active');
            
            if (tabId === 'results') {
                renderResults();
                determineWinners();
            }
            
            if (tabId === 'admin') {
                renderAdminPanel();
            }
        }
        
        // Render candidates for voting
        function renderCandidates() {
            const crCandidatesEl = document.getElementById('cr-candidates');
            const lrCandidatesEl = document.getElementById('lr-candidates');
            
            crCandidatesEl.innerHTML = '';
            lrCandidatesEl.innerHTML = '';
            
            const crCandidates = candidates.filter(c => c.group === 'cr');
            const lrCandidates = candidates.filter(c => c.group === 'lr');
            
            if (crCandidates.length === 0) {
                crCandidatesEl.innerHTML = '<p>No CR candidates have been added yet.</p>';
                document.getElementById('cr-section').style.display = 'none';
            } else {
                document.getElementById('cr-section').style.display = 'block';
                crCandidates.forEach(candidate => {
                    crCandidatesEl.innerHTML += `
                        <div class="candidate">
                            <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/93709e2d-1716-492a-80e4-92dcc85a342e.png" alt="${candidate.name} - CR candidate">
                            <h3>${candidate.name}</h3>
                            ${currentUser && currentUser.role === 'student' ? 
                                `<button class="vote-btn" onclick="voteForCandidate(${candidate.id}, 'cr')" 
                                 ${currentUser.votedCR ? 'disabled' : ''}>
                                    ${currentUser.votedCR ? 'Already Voted' : 'Vote'}
                                </button>` : ''}
                        </div>
                    `;
                });
            }
            
            if (lrCandidates.length === 0) {
                lrCandidatesEl.innerHTML = '<p>No LR candidates have been added yet.</p>';
                document.getElementById('lr-section').style.display = 'none';
            } else {
                document.getElementById('lr-section').style.display = 'block';
                lrCandidates.forEach(candidate => {
                    lrCandidatesEl.innerHTML += `
                        <div class="candidate">
                            <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/7010898a-fb12-48d1-87af-cd6d32282705.png" alt="${candidate.name} - LR candidate">
                            <h3>${candidate.name}</h3>
                            ${currentUser && currentUser.role === 'student' ? 
                                `<button class="vote-btn" onclick="voteForCandidate(${candidate.id}, 'lr')" 
                                 ${currentUser.votedLR ? 'disabled' : ''}>
                                    ${currentUser.votedLR ? 'Already Voted' : 'Vote'}
                                </button>` : ''}
                        </div>
                    `;
                });
            }
        }
        
        // Vote for a candidate
        function voteForCandidate(candidateId, group) {
            if (!currentUser || currentUser.role !== 'student') return;
            
            const candidate = candidates.find(c => c.id === candidateId);
            if (candidate) {
                candidate.votes++;
                
                if (group === 'cr') {
                    currentUser.votedCR = true;
                } else if (group === 'lr') {
                    currentUser.votedLR = true;
                }
                
                renderCandidates();
                openModal();
            }
        }
        
        // Open thank you modal
        function openModal() {
            document.getElementById('thankYouModal').style.display = 'flex';
        }
        
        // Close modal
        function closeModal() {
            document.getElementById('thankYouModal').style.display = 'none';
        }

        // Logout function
        function logout() {
            localStorage.removeItem('currentUser');
            currentUser = null;
            init(); // Reset the page
            showTab('loginRegister');
        }
        
        // Login function - saves state in localStorage
        function login() {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            
            const user = users.find(u => u.username === username && u.password === password);
            
            if (user) {
                currentUser = user;
                // Save login state in localStorage
                localStorage.setItem('currentUser', JSON.stringify(user));
                updateUI();
                document.getElementById('loginMessage').textContent = 'Login successful!';
                document.getElementById('loginMessage').style.color = 'green';
                
                // Hide login prompt and show voting sections
                document.getElementById('login-prompt').style.display = 'none';
                document.getElementById('cr-section').style.display = 'block';
                document.getElementById('lr-section').style.display = 'block';
                
                // Show appropriate tab based on role
                if (user.role === 'teacher') {
                    showTab('admin');
                } else {
                    showTab('vote');
                }
            } else {
                document.getElementById('loginMessage').textContent = 'Invalid username or password';
                document.getElementById('loginMessage').style.color = 'red';
            }
        }
        
        // Register function - saves users to localStorage
        function register() {
            const username = document.getElementById('regUsername').value;
            const password = document.getElementById('regPassword').value;
            const role = document.getElementById('regRole').value.toLowerCase();
            
            if (!username || !password || (role !== 'student' && role !== 'teacher')) {
                document.getElementById('registerMessage').textContent = 'Please fill all fields correctly';
                document.getElementById('registerMessage').style.color = 'red';
                return;
            }
            
            // Get existing users from localStorage or initialize if empty
            let existingUsers = localStorage.getItem('users');
            if (existingUsers) {
                users = JSON.parse(existingUsers);
            }
            
            if (users.some(u => u.username === username)) {
                document.getElementById('registerMessage').textContent = 'Username already exists';
                document.getElementById('registerMessage').style.color = 'red';
                return;
            }
            
            const newUser = { 
                username, 
                password, 
                role,
                votedCR: false,
                votedLR: false 
            };
            
            users.push(newUser);
            // Save updated users array to localStorage
            localStorage.setItem('users', JSON.stringify(users));
            
            document.getElementById('registerMessage').textContent = 'Registration successful! Please login.';
            document.getElementById('registerMessage').style.color = 'green';
            
            // Clear registration form
            document.getElementById('regUsername').value = '';
            document.getElementById('regPassword').value = '';
            document.getElementById('regRole').value = '';
        }
        
        // Update UI based on logged-in user
        function updateUI() {
            const resultsTab = document.getElementById('resultsTab');
            const adminTab = document.getElementById('adminTab');
            
            if (currentUser && currentUser.role === 'teacher') {
                resultsTab.style.display = 'block';
                adminTab.style.display = 'block';
                
                // Hide voting tab for teachers
                document.querySelector('[onclick="showTab(\'vote\')"]').style.display = 'none';
            } else {
                resultsTab.style.display = 'none';
                adminTab.style.display = 'none';
                
                // Show voting tab for students
                document.querySelector('[onclick="showTab(\'vote\')"]').style.display = 'block';
            }
            
            renderCandidates();
        }
        
        // Render voting results
        function renderResults() {
            const crResultsBody = document.getElementById('cr-results-body');
            const lrResultsBody = document.getElementById('lr-results-body');
            
            crResultsBody.innerHTML = '';
            lrResultsBody.innerHTML = '';
            
            const crCandidates = candidates.filter(c => c.group === 'cr').sort((a, b) => b.votes - a.votes);
            const lrCandidates = candidates.filter(c => c.group === 'lr').sort((a, b) => b.votes - a.votes);
            
            crCandidates.forEach((candidate, index) => {
                crResultsBody.innerHTML += `
                    <tr ${index === 0 ? 'class="winner"' : ''}>
                        <td>${candidate.name}</td>
                        <td>${candidate.votes}</td>
                        <td>${index === 0 ? 'Leading' : ''}</td>
                    </tr>
                `;
            });
            
            lrCandidates.forEach((candidate, index) => {
                lrResultsBody.innerHTML += `
                    <tr ${index === 0 ? 'class="winner"' : ''}>
                        <td>${candidate.name}</td>
                        <td>${candidate.votes}</td>
                        <td>${index === 0 ? 'Leading' : ''}</td>
                    </tr>
                `;
            });
        }
        
        // Determine winners
        function determineWinners() {
            const crWinnerEl = document.getElementById('cr-winner');
            const lrWinnerEl = document.getElementById('lr-winner');
            
            const crCandidates = candidates.filter(c => c.group === 'cr').sort((a, b) => b.votes - a.votes);
            const lrCandidates = candidates.filter(c => c.group === 'lr').sort((a, b) => b.votes - a.votes);
            
            if (crCandidates.length > 0) {
                const winner = crCandidates[0];
                crWinnerEl.innerHTML = `<p><strong>CR Winner:</strong> ${winner.name} with ${winner.votes} votes</p>`;
            } else {
                crWinnerEl.innerHTML = '<p>No CR candidates yet</p>';
            }
            
            if (lrCandidates.length > 0) {
                const winner = lrCandidates[0];
                lrWinnerEl.innerHTML = `<p><strong>LR Winner:</strong> ${winner.name} with ${winner.votes} votes</p>`;
            } else {
                lrWinnerEl.innerHTML = '<p>No LR candidates yet</p>';
            }
        }
        
        // Render admin panel
        function renderAdminPanel() {
            updateRemoveCandidateDropdown();
        }
        
        // Update dropdown for removing candidates
        function updateRemoveCandidateDropdown() {
            const selectEl = document.getElementById('candidateToRemove');
            selectEl.innerHTML = '<option value="">Select candidate</option>';
            
            candidates.forEach(candidate => {
                selectEl.innerHTML += `<option value="${candidate.id}">${candidate.name} (${candidate.group})</option>`;
            });
        }
        
        // Add a new candidate
        function addCandidate() {
            const name = document.getElementById('candidateName').value;
            const group = document.getElementById('candidateGroup').value.toLowerCase();
            
            if (!name || (group !== 'cr' && group !== 'lr')) {
                document.getElementById('adminMessage').textContent = 'Please enter valid name and group (cr/lr)';
                document.getElementById('adminMessage').style.color = 'red';
                return;
            }
            
            const newId = candidates.length > 0 ? Math.max(...candidates.map(c => c.id)) + 1 : 1;
            const newCandidate = {
                id: newId,
                name: name,
                group: group,
                votes: 0
            };
            
            candidates.push(newCandidate);
            document.getElementById('adminMessage').textContent = `Candidate "${name}" added successfully!`;
            document.getElementById('adminMessage').style.color = 'green';
            
            // Clear form
            document.getElementById('candidateName').value = '';
            document.getElementById('candidateGroup').value = '';
            
            updateRemoveCandidateDropdown();
            renderCandidates();
        }
        
        // Remove a candidate
        function removeCandidate() {
            const candidateId = parseInt(document.getElementById('candidateToRemove').value);
            
            if (!candidateId) {
                document.getElementById('adminMessage').textContent = 'Please select a candidate to remove';
                document.getElementById('adminMessage').style.color = 'red';
                return;
            }
            
            const candidateIndex = candidates.findIndex(c => c.id === candidateId);
            if (candidateIndex !== -1) {
                const removedName = candidates[candidateIndex].name;
                candidates.splice(candidateIndex, 1);
                document.getElementById('adminMessage').textContent = `Candidate "${removedName}" removed successfully!`;
                document.getElementById('adminMessage').style.color = 'green';
                updateRemoveCandidateDropdown();
                renderCandidates();
            }
        }
        
        // Initialize the page when loaded
        window.onload = init;
    </script>
</body>
</html>
